{
  "version": 3,
  "sources": ["../../../src/lib/parsers/parser-3233-LiveDisplay.ts"],
  "sourcesContent": ["import * as utils from \"@iobroker/adapter-core\";\r\nimport { Parser } from \"binary-parser\";\r\nimport { ParserCommon } from \"./parser-common\";\r\nimport { ParserInterface } from \"./parserinterface\";\r\n\r\ninterface Message_3233_LiveDisplay {\r\n    SystemOpStatus: number;\r\n    SystemAuthMode: number;\r\n    CriticalBatOkState: boolean;\r\n    CriticalIsTransition: boolean;\r\n    CriticalIsPrecharge: boolean;\r\n    HeatOnState: boolean;\r\n    CoolOnState: boolean;\r\n    ChargeOnState: boolean;\r\n    ChargeIsLimPower: boolean;\r\n    DischgOnState: boolean;\r\n    DischgIsLimPower: boolean;\r\n    ChargeInBypass: boolean;\r\n    ChargeHasBypassTempRelief: boolean;\r\n    MinCellVolt: number;\r\n    MaxCellVolt: number;\r\n    AvgCellVolt: number;\r\n    MinCellTemp: number;\r\n    MaxCellTemp: number;\r\n    AvgCellTemp: number;\r\n    NumOfCellsInBypass: number;\r\n    ShuntVoltage: number;\r\n    ShuntCurrent: number;\r\n    ShuntPowerVA: number;\r\n    ShuntSOC: number;\r\n    NomCapacityToEmpty: number;\r\n    ShuntCumulkWhCharge: number;\r\n    ShuntCumulkWhDischg: number;\r\n    CriticalEvents: number;\r\n    SystemTime: number;\r\n    GlobalSetupVers: number;\r\n    LifetimeSetupVers: number;\r\n    DiffBypassTicks: number;\r\n    DiffTempTicks: number;\r\n    DiffVoltTicks: number;\r\n    DiffLogicTicks: number;\r\n}\r\n\r\nexport class Parser_3233_LiveDisplay extends ParserCommon implements ParserInterface {\r\n\r\n    //public parser: Parser;\r\n    //public adapter: utils.AdapterInstance;\r\n\r\n    public constructor(adapter: utils.AdapterInstance) {\r\n        super();\r\n        // Category    = Discovery\r\n        // Description = System Discovery message\r\n        // MsgLength   = 57\r\n        // Version     = 3\r\n        // Frequency   = 2 seconds\r\n        // Valid from  = SW 2.15\r\n        this.adapter = adapter;\r\n        this.messageId = \"3233\";\r\n        this.messageName = \"Live Display\";\r\n        this.parser = new Parser()\r\n            .skip(8)\r\n            .uint8(\"SystemOpStatus\") /* Choices\r\n                    Simulator = 0,        // LED = rainbow pulse\r\n                    Idle = 1,             // LED = green slow pulse\r\n                    Discharging = 2,      // LED = green solid\r\n                    SoC Empty = 3,        // LED = green double blink\r\n                    Charging = 4,         // LED = blue slow pulse\r\n                    Full = 5,             // LED = blue double blink\r\n                    Timeout = 6,          // LED = red solid\r\n                    Critical Pending = 7, // LED = red fast pulse\r\n                    Critical Offline = 8, // LED = red slow pulse\r\n                    Mqtt Offline = 9,     // LED = white blink\r\n                    Auth Setup = 10,      // LED = white solid\r\n                    Shunt Timeout = 11,   // LED = red solid  */\r\n            .uint8(\"SystemAuthMode\") /* Choices\r\n                    Default     = 0,\r\n                    Technician  = 1,\r\n                    Factory     = 2, */\r\n            .bit1(\"CriticalBatOkState\")         // boolean index 10 - bit0\r\n            .bit1(\"CriticalIsTransition\")       // boolean index 10 - bit1\r\n            .bit1(\"CriticalIsPrecharge\")        // boolean index 10 - bit2\r\n            .bit1(\"HeatOnState\")                // boolean index 10 - bit3\r\n            .bit1(\"CoolOnState\")                // boolean index 10 - bit4\r\n            .bit3(\"reserved1\")\r\n            .bit1(\"ChargeOnState\")              // boolean index 11 - bit0\r\n            .bit1(\"ChargeIsLimPower\")           // boolean index 11 - bit1\r\n            .bit1(\"DischgOnState\")              // boolean index 11 - bit2\r\n            .bit1(\"DischgIsLimPower\")           // boolean index 11 - bit3\r\n            .bit1(\"ChargeInBypass\")             // boolean index 11 - bit4\r\n            .bit1(\"ChargeHasBypassTempRelief\")  // boolean index 11 - bit5\r\n            .bit2(\"reserved2\")\r\n            .int16le(\"MinCellVolt\",     { formatter: (x) => {return x/1000;}})   // index 12 - voltage\r\n            .int16le(\"MaxCellVolt\",     { formatter: (x) => {return x/1000;}})   // index 14 - voltage\r\n            .int16le(\"AvgCellVolt\",     { formatter: (x) => {return x/1000;}})   // index 16 - voltage\r\n            .uint8(\"MinCellTemp\",       { formatter: (x) => {return x-40;}})     // index 18 - temperature \u00BAC\r\n            .uint8(\"MaxCellTemp\",       { formatter: (x) => {return x-40;}})     // index 19 - temperature \u00BAC\r\n            .uint8(\"AvgCellTemp\",       { formatter: (x) => {return x-40;}})     // index 20 - temperature \u00BAC\r\n            .uint8(\"NumOfCellsInBypass\")\r\n            .int16le(\"ShuntVoltage\",    { formatter: (x) => {return x/100;}})\r\n            .floatle(\"ShuntCurrent\",    { formatter: (x) => {return x/1000;}})\r\n            .floatle(\"ShuntPowerVA\",    { formatter: (x) => {return x/1000;}}) // kW\r\n            .int16le(\"ShuntSOC\",        { formatter: (x) => {return x/100;}})  // percent hires 2 dec.pt\r\n            .floatle(\"NomCapacityToEmpty\",  { formatter: (x) => {return x/1000;}}) // Ah\r\n            .floatle(\"ShuntCumulkWhCharge\", { formatter: (x) => {return x/1000;}}) // kWh\r\n            .floatle(\"ShuntCumulkWhDischg\", { formatter: (x) => {return x/1000;}}) // kWh\r\n            .uint8(\"CriticalEvents\")\r\n            .int32le(\"SystemTime\")      // index 47 - Epoch\r\n            .uint8(\"GlobalSetupVers\")   // index 51\r\n            .uint8(\"LifetimeSetupVers\") // index 52\r\n            .uint8(\"DiffBypassTicks\")   // index 53\r\n            .uint8(\"DiffTempTicks\")     // index 54\r\n            .uint8(\"DiffVoltTicks\")     // index 55\r\n            .uint8(\"DiffLogicTicks\");    // index 56\r\n    }\r\n\r\n    public async initObjects(systemId: number): Promise<void> {\r\n        await Promise.all([\r\n            this.adapter?.setObjectNotExistsAsync(this.getVariableName(systemId, \"SystemOpStatus\"), {\r\n                type: \"state\",\r\n                common: {\r\n                    name: \"SystemOpStatus\",\r\n                    type: \"string\",\r\n                    role: \"common\",\r\n                    read: true,\r\n                    write: true,\r\n                },\r\n                native: {},\r\n            }),\r\n            this.adapter?.setObjectNotExistsAsync(this.getVariableName(systemId, \"SystemAuthMode\"), {\r\n                type: \"state\",\r\n                common: {\r\n                    name: \"SystemAuthMode\",\r\n                    type: \"number\",\r\n                    role: \"indicator\",\r\n                    read: true,\r\n                    write: true,\r\n                },\r\n                native: {},\r\n            }),\r\n            this.adapter?.setObjectNotExistsAsync(this.getVariableName(systemId, \"CriticalBatOkState\"), {\r\n                type: \"state\",\r\n                common: {\r\n                    name: \"CriticalBatOkState\",\r\n                    type: \"number\",\r\n                    role: \"indicator\",\r\n                    read: true,\r\n                    write: true,\r\n                },\r\n                native: {},\r\n            }),\r\n            this.adapter?.setObjectNotExistsAsync(this.getVariableName(systemId, \"CriticalIsTransition\"), {\r\n                type: \"state\",\r\n                common: {\r\n                    name: \"CriticalIsTransition\",\r\n                    type: \"number\",\r\n                    role: \"common\",\r\n                    read: true,\r\n                    write: true,\r\n                },\r\n                native: {},\r\n            }),\r\n            this.adapter?.setObjectNotExistsAsync(this.getVariableName(systemId, \"CriticalIsPrecharge\"), {\r\n                type: \"state\",\r\n                common: {\r\n                    name: \"CriticalIsPrecharge\",\r\n                    type: \"number\",\r\n                    role: \"level\",\r\n                    read: true,\r\n                    write: true,\r\n                },\r\n                native: {},\r\n            }),\r\n            this.adapter?.setObjectNotExistsAsync(this.getVariableName(systemId, \"HeatOnState\"), {\r\n                type: \"state\",\r\n                common: {\r\n                    name: \"HeatOnState\",\r\n                    type: \"number\",\r\n                    role: \"level\",\r\n                    read: true,\r\n                    write: true,\r\n                },\r\n                native: {},\r\n            }),\r\n            this.adapter?.setObjectNotExistsAsync(this.getVariableName(systemId, \"CoolOnState\"), {\r\n                type: \"state\",\r\n                common: {\r\n                    name: \"CoolOnState\",\r\n                    type: \"number\",\r\n                    role: \"level\",\r\n                    read: true,\r\n                    write: true,\r\n                },\r\n                native: {},\r\n            }),\r\n            this.adapter?.setObjectNotExistsAsync(this.getVariableName(systemId, \"ChargeOnState\"), {\r\n                type: \"state\",\r\n                common: {\r\n                    name: \"ChargeOnState\",\r\n                    type: \"number\",\r\n                    role: \"level\",\r\n                    read: true,\r\n                    write: true,\r\n                },\r\n                native: {},\r\n            }),\r\n            this.adapter?.setObjectNotExistsAsync(this.getVariableName(systemId, \"ChargeIsLimPower\"), {\r\n                type: \"state\",\r\n                common: {\r\n                    name: \"ChargeIsLimPower\",\r\n                    type: \"number\",\r\n                    role: \"level\",\r\n                    read: true,\r\n                    write: true,\r\n                },\r\n                native: {},\r\n            }),\r\n            this.adapter?.setObjectNotExistsAsync(this.getVariableName(systemId, \"DischgOnState\"), {\r\n                type: \"state\",\r\n                common: {\r\n                    name: \"DischgOnState\",\r\n                    type: \"number\",\r\n                    role: \"level\",\r\n                    read: true,\r\n                    write: true,\r\n                },\r\n                native: {},\r\n            }),\r\n            this.adapter?.setObjectNotExistsAsync(this.getVariableName(systemId, \"DischgIsLimPower\"), {\r\n                type: \"state\",\r\n                common: {\r\n                    name: \"DischgIsLimPower\",\r\n                    type: \"number\",\r\n                    role: \"level\",\r\n                    read: true,\r\n                    write: true,\r\n                },\r\n                native: {},\r\n            }),\r\n            this.adapter?.setObjectNotExistsAsync(this.getVariableName(systemId, \"ChargeInBypass\"), {\r\n                type: \"state\",\r\n                common: {\r\n                    name: \"ChargeInBypass\",\r\n                    type: \"number\",\r\n                    role: \"level\",\r\n                    read: true,\r\n                    write: true,\r\n                    unit: \"V\"\r\n                },\r\n                native: {},\r\n            }),\r\n            this.adapter?.setObjectNotExistsAsync(this.getVariableName(systemId, \"ChargeHasBypassTempRelief\"), {\r\n                type: \"state\",\r\n                common: {\r\n                    name: \"ChargeHasBypassTempRelief\",\r\n                    type: \"number\",\r\n                    role: \"level\",\r\n                    read: true,\r\n                    write: true,\r\n                    unit: \"V\"\r\n                },\r\n                native: {},\r\n            }),\r\n            this.adapter?.setObjectNotExistsAsync(this.getVariableName(systemId, \"MinCellVolt\"), {\r\n                type: \"state\",\r\n                common: {\r\n                    name: \"MinCellVolt\",\r\n                    type: \"number\",\r\n                    role: \"level\",\r\n                    read: true,\r\n                    write: true,\r\n                    unit: \"V\"\r\n                },\r\n                native: {},\r\n            }),\r\n            this.adapter?.setObjectNotExistsAsync(this.getVariableName(systemId, \"MaxCellVolt\"), {\r\n                type: \"state\",\r\n                common: {\r\n                    name: \"MaxCellVolt\",\r\n                    type: \"number\",\r\n                    role: \"level\",\r\n                    read: true,\r\n                    write: true,\r\n                    unit: \"\u00B0C\"\r\n                },\r\n                native: {},\r\n            }),\r\n            this.adapter?.setObjectNotExistsAsync(this.getVariableName(systemId, \"AvgCellVolt\"), {\r\n                type: \"state\",\r\n                common: {\r\n                    name: \"AvgCellVolt\",\r\n                    type: \"number\",\r\n                    role: \"level\",\r\n                    read: true,\r\n                    write: true,\r\n                },\r\n                native: {},\r\n            }),\r\n            this.adapter?.setObjectNotExistsAsync(this.getVariableName(systemId, \"MinCellTemp\"), {\r\n                type: \"state\",\r\n                common: {\r\n                    name: \"MinCellTemp\",\r\n                    type: \"number\",\r\n                    role: \"level\",\r\n                    read: true,\r\n                    write: true,\r\n                },\r\n                native: {},\r\n            }),\r\n            this.adapter?.setObjectNotExistsAsync(this.getVariableName(systemId, \"MaxCellTemp\"), {\r\n                type: \"state\",\r\n                common: {\r\n                    name: \"MaxCellTemp\",\r\n                    type: \"number\",\r\n                    role: \"level\",\r\n                    read: true,\r\n                    write: true,\r\n                },\r\n                native: {},\r\n            }),\r\n            this.adapter?.setObjectNotExistsAsync(this.getVariableName(systemId, \"AvgCellTemp\"), {\r\n                type: \"state\",\r\n                common: {\r\n                    name: \"AvgCellTemp\",\r\n                    type: \"number\",\r\n                    role: \"level\",\r\n                    read: true,\r\n                    write: true,\r\n                    unit: \"%\",\r\n                },\r\n                native: {},\r\n            }),\r\n            this.adapter?.setObjectNotExistsAsync(this.getVariableName(systemId, \"NumOfCellsInBypass\"), {\r\n                type: \"state\",\r\n                common: {\r\n                    name: \"NumOfCellsInBypass\",\r\n                    type: \"number\",\r\n                    role: \"level\",\r\n                    read: true,\r\n                    write: true,\r\n                    unit: \"V\"\r\n                },\r\n                native: {},\r\n            }),\r\n            this.adapter?.setObjectNotExistsAsync(this.getVariableName(systemId, \"ShuntVoltage\"), {\r\n                type: \"state\",\r\n                common: {\r\n                    name: \"ShuntVoltage\",\r\n                    type: \"number\",\r\n                    role: \"level\",\r\n                    read: true,\r\n                    write: true,\r\n                    unit: \"A\",\r\n                },\r\n                native: {},\r\n            }),\r\n            this.adapter?.setObjectNotExistsAsync(this.getVariableName(systemId, \"ShuntCurrent\"), {\r\n                type: \"state\",\r\n                common: {\r\n                    name: \"ShuntCurrent\",\r\n                    type: \"number\",\r\n                    role: \"level\",\r\n                    read: true,\r\n                    write: true,\r\n                },\r\n                native: {},\r\n            }),\r\n            this.adapter?.setObjectNotExistsAsync(this.getVariableName(systemId, \"ShuntPowerVA\"), {\r\n                type: \"state\",\r\n                common: {\r\n                    name: \"ShuntPowerVA\",\r\n                    type: \"number\",\r\n                    role: \"level\",\r\n                    read: true,\r\n                    write: true,\r\n                },\r\n                native: {},\r\n            }),\r\n            this.adapter?.setObjectNotExistsAsync(this.getVariableName(systemId, \"ShuntSOC\"), {\r\n                type: \"state\",\r\n                common: {\r\n                    name: \"ShuntSOC\",\r\n                    type: \"number\",\r\n                    role: \"level\",\r\n                    read: true,\r\n                    write: true,\r\n                },\r\n                native: {},\r\n            }),\r\n            this.adapter?.setObjectNotExistsAsync(this.getVariableName(systemId, \"NomCapacityToEmpty\"), {\r\n                type: \"state\",\r\n                common: {\r\n                    name: \"NomCapacityToEmpty\",\r\n                    type: \"number\",\r\n                    role: \"level\",\r\n                    read: true,\r\n                    write: true,\r\n                },\r\n                native: {},\r\n            }),\r\n            this.adapter?.setObjectNotExistsAsync(this.getVariableName(systemId, \"ShuntCumulkWhCharge\"), {\r\n                type: \"state\",\r\n                common: {\r\n                    name: \"ShuntCumulkWhCharge\",\r\n                    type: \"number\",\r\n                    role: \"level\",\r\n                    read: true,\r\n                    write: true,\r\n                },\r\n                native: {},\r\n            }),\r\n            this.adapter?.setObjectNotExistsAsync(this.getVariableName(systemId, \"ShuntCumulkWhDischg\"), {\r\n                type: \"state\",\r\n                common: {\r\n                    name: \"ShuntCumulkWhDischg\",\r\n                    type: \"number\",\r\n                    role: \"level\",\r\n                    read: true,\r\n                    write: true,\r\n                },\r\n                native: {},\r\n            }),\r\n            this.adapter?.setObjectNotExistsAsync(this.getVariableName(systemId, \"CriticalEvents\"), {\r\n                type: \"state\",\r\n                common: {\r\n                    name: \"CriticalEvents\",\r\n                    type: \"number\",\r\n                    role: \"level\",\r\n                    read: true,\r\n                    write: true,\r\n                },\r\n                native: {},\r\n            }),\r\n            this.adapter?.setObjectNotExistsAsync(this.getVariableName(systemId, \"SystemTime\"), {\r\n                type: \"state\",\r\n                common: {\r\n                    name: \"SystemTime\",\r\n                    type: \"number\",\r\n                    role: \"level\",\r\n                    read: true,\r\n                    write: true,\r\n                },\r\n                native: {},\r\n            }),\r\n            this.adapter?.setObjectNotExistsAsync(this.getVariableName(systemId, \"GlobalSetupVers\"), {\r\n                type: \"state\",\r\n                common: {\r\n                    name: \"GlobalSetupVers\",\r\n                    type: \"number\",\r\n                    role: \"level\",\r\n                    read: true,\r\n                    write: true,\r\n                },\r\n                native: {},\r\n            }),\r\n            this.adapter?.setObjectNotExistsAsync(this.getVariableName(systemId, \"LifetimeSetupVers\"), {\r\n                type: \"state\",\r\n                common: {\r\n                    name: \"LifetimeSetupVers\",\r\n                    type: \"number\",\r\n                    role: \"level\",\r\n                    read: true,\r\n                    write: true,\r\n                },\r\n                native: {},\r\n            }),\r\n            this.adapter?.setObjectNotExistsAsync(this.getVariableName(systemId, \"DiffBypassTicks\"), {\r\n                type: \"state\",\r\n                common: {\r\n                    name: \"DiffBypassTicks\",\r\n                    type: \"number\",\r\n                    role: \"level\",\r\n                    read: true,\r\n                    write: true,\r\n                },\r\n                native: {},\r\n            }),\r\n            this.adapter?.setObjectNotExistsAsync(this.getVariableName(systemId, \"DiffTempTicks\"), {\r\n                type: \"state\",\r\n                common: {\r\n                    name: \"DiffTempTicks\",\r\n                    type: \"number\",\r\n                    role: \"level\",\r\n                    read: true,\r\n                    write: true,\r\n                },\r\n                native: {},\r\n            }),\r\n            this.adapter?.setObjectNotExistsAsync(this.getVariableName(systemId, \"DiffVoltTicks\"), {\r\n                type: \"state\",\r\n                common: {\r\n                    name: \"DiffVoltTicks\",\r\n                    type: \"number\",\r\n                    role: \"level\",\r\n                    read: true,\r\n                    write: true,\r\n                },\r\n                native: {},\r\n            }),\r\n            this.adapter?.setObjectNotExistsAsync(this.getVariableName(systemId, \"DiffLogicTicks\"), {\r\n                type: \"state\",\r\n                common: {\r\n                    name: \"DiffLogicTicks\",\r\n                    type: \"number\",\r\n                    role: \"level\",\r\n                    read: true,\r\n                    write: true,\r\n                },\r\n                native: {},\r\n            }),\r\n        ]);\r\n    }\r\n\r\n    public async handleMessage(systemId: number, msg: Buffer): Promise<void> {\r\n        const result: Message_3233_LiveDisplay = this.parser?.parse(msg);\r\n        this.adapter?.setStateChangedAsync(this.getVariableName(systemId, \"SystemOpStatus\"), result.SystemOpStatus, true);\r\n        this.adapter?.setStateChangedAsync(this.getVariableName(systemId, \"SystemAuthMode\"), result.SystemAuthMode, true);\r\n        this.adapter?.setStateChangedAsync(this.getVariableName(systemId, \"CriticalBatOkState\"), result.CriticalBatOkState, true);\r\n        this.adapter?.setStateChangedAsync(this.getVariableName(systemId, \"CriticalIsTransition\"), result.CriticalIsTransition, true);\r\n        this.adapter?.setStateChangedAsync(this.getVariableName(systemId, \"CriticalIsPrecharge\"), result.CriticalIsPrecharge, true);\r\n        this.adapter?.setStateChangedAsync(this.getVariableName(systemId, \"HeatOnState\"), result.HeatOnState, true);\r\n        this.adapter?.setStateChangedAsync(this.getVariableName(systemId, \"CoolOnState\"), result.CoolOnState, true);\r\n        this.adapter?.setStateChangedAsync(this.getVariableName(systemId, \"ChargeOnState\"), result.ChargeOnState, true);\r\n        this.adapter?.setStateChangedAsync(this.getVariableName(systemId, \"ChargeIsLimPower\"), result.ChargeIsLimPower, true);\r\n        this.adapter?.setStateChangedAsync(this.getVariableName(systemId, \"DischgOnState\"), result.DischgOnState, true);\r\n        this.adapter?.setStateChangedAsync(this.getVariableName(systemId, \"DischgIsLimPower\"), result.DischgIsLimPower, true);\r\n        this.adapter?.setStateChangedAsync(this.getVariableName(systemId, \"ChargeInBypass\"), result.ChargeInBypass, true);\r\n        this.adapter?.setStateChangedAsync(this.getVariableName(systemId, \"ChargeHasBypassTempRelief\"), result.ChargeHasBypassTempRelief, true);\r\n        this.adapter?.setStateChangedAsync(this.getVariableName(systemId, \"MinCellVolt\"), result.MinCellVolt, true);\r\n        this.adapter?.setStateChangedAsync(this.getVariableName(systemId, \"MaxCellVolt\"), result.MaxCellVolt, true);\r\n        this.adapter?.setStateChangedAsync(this.getVariableName(systemId, \"AvgCellVolt\"), result.AvgCellVolt, true);\r\n        this.adapter?.setStateChangedAsync(this.getVariableName(systemId, \"MinCellTemp\"), result.MinCellTemp, true);\r\n        this.adapter?.setStateChangedAsync(this.getVariableName(systemId, \"MaxCellTemp\"), result.MaxCellTemp, true);\r\n        this.adapter?.setStateChangedAsync(this.getVariableName(systemId, \"AvgCellTemp\"), result.AvgCellTemp, true);\r\n        this.adapter?.setStateChangedAsync(this.getVariableName(systemId, \"NumOfCellsInBypass\"), result.NumOfCellsInBypass, true);\r\n        this.adapter?.setStateChangedAsync(this.getVariableName(systemId, \"ShuntVoltage\"), result.ShuntVoltage, true);\r\n        this.adapter?.setStateChangedAsync(this.getVariableName(systemId, \"ShuntCurrent\"), result.ShuntCurrent, true);\r\n        this.adapter?.setStateChangedAsync(this.getVariableName(systemId, \"ShuntPowerVA\"), result.ShuntPowerVA, true);\r\n        this.adapter?.setStateChangedAsync(this.getVariableName(systemId, \"ShuntSOC\"), result.ShuntSOC, true);\r\n        this.adapter?.setStateChangedAsync(this.getVariableName(systemId, \"NomCapacityToEmpty\"), result.NomCapacityToEmpty, true);\r\n        this.adapter?.setStateChangedAsync(this.getVariableName(systemId, \"ShuntCumulkWhCharge\"), result.ShuntCumulkWhCharge, true);\r\n        this.adapter?.setStateChangedAsync(this.getVariableName(systemId, \"ShuntCumulkWhDischg\"), result.ShuntCumulkWhDischg, true);\r\n        this.adapter?.setStateChangedAsync(this.getVariableName(systemId, \"CriticalEvents\"), result.CriticalEvents, true);\r\n        this.adapter?.setStateChangedAsync(this.getVariableName(systemId, \"SystemTime\"), result.SystemTime, true);\r\n        this.adapter?.setStateChangedAsync(this.getVariableName(systemId, \"GlobalSetupVers\"), result.GlobalSetupVers, true);\r\n        this.adapter?.setStateChangedAsync(this.getVariableName(systemId, \"LifetimeSetupVers\"), result.LifetimeSetupVers, true);\r\n        this.adapter?.setStateChangedAsync(this.getVariableName(systemId, \"DiffBypassTicks\"), result.DiffBypassTicks, true);\r\n        this.adapter?.setStateChangedAsync(this.getVariableName(systemId, \"DiffTempTicks\"), result.DiffTempTicks, true);\r\n        this.adapter?.setStateChangedAsync(this.getVariableName(systemId, \"DiffVoltTicks\"), result.DiffVoltTicks, true);\r\n        this.adapter?.setStateChangedAsync(this.getVariableName(systemId, \"DiffLogicTicks\"), result.DiffLogicTicks, true);\r\n    }\r\n}"],
  "mappings": "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",
  "names": []
}
